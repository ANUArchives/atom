# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

homepage:
  url:   /
  class: QubitResourceRoute
  param:
    module: staticpage
    action: index
    slug: home

slug_index_template:
  url: /:slug;:template
  class: QubitMetadataRoute
  param:
    action: index
    slug: { pattern: '[^;/]+' }

slug_index:
  url: /:slug
  class: QubitMetadataRoute
  param:
    action: index
    slug: { pattern: '[^;/]+' }

oai_harvester_harvest_all_sets:
  url: /oai/harvest/:type/:id/*
  param:
    module: qtOaiPlugin
    action: harvesterHarvest
    id: { pattern: \d+ }

oai_harvester_delete:
  url: /oai/deleteRepository/:repositoryId/*
  param:
    module: qtOaiPlugin
    action: harvesterDelete
    repositoryId: { pattern: \d+ }

oai_requests:
  url: /oai/request
  param:
    module: qtOaiPlugin
    action: oai

# After *all* information object routes to avoid hijacking
informationobject/addDigitalObject:
  url: /:slug/addDigitalObject
  class: QubitResourceRoute
  param:
    module: informationobject
    action: addDigitalObject

informationobject/fileList:
  url: /:slug/fileList
  class: QubitResourceRoute
  param:
    module: informationobject
    action: fileList
    slug: { pattern: '[^;]+' }

informationobject/multiFileUpload:
  url: /:slug/multiFileUpload
  class: QubitResourceRoute
  param:
    module: informationobject
    action: multiFileUpload

informationobject/reports:
  url: /:slug/reports
  class: QubitResourceRoute
  param:
    module: informationobject
    action: reports

sword/action/slug:
  url: /sword/:action/:slug
  class: QubitResourceRoute
  param:
    module: qtSwordPlugin
    slug: { pattern: '[^;]+' }
    throw404: false

sword:
  url: /sword/:action
  param:
    module: qtSwordPlugin

slug;default_index:
  url:   /:slug;:module
  class: QubitResourceRoute
  param:
    action: index

slug;default:
  url: /:slug;:module/:action
  class: QubitResourceRoute

id;default:
  url: /:module/:action/:id
  class: QubitRoute

default_index:
  url:   /:module
  param:
    action: index

# After slug;default to avoid matching array($object, 'module' => 'foo', 'action', => 'edit')
edit:
  url: /:slug/edit
  class: QubitMetadataRoute
  param:
    action: edit
    slug: { pattern: '[^;/]+' }

# After edit to avoid matching /;foo/add
add:
  url: /:module/add
  class: QubitMetadataRoute
  param:
    action: edit

copy:
  url: /:module/copy
  class: QubitMetadataRoute
  param:
    action: copy

default:
  url:   /:module/:action
