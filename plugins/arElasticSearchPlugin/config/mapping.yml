# Mapping types
# http://www.elasticsearch.org/guide/reference/mapping/
mapping:

  # Special attributes:
  # - i18n: $tablename_i18n.* properties will be added
  # - timestamp: adds created_at and updated_at properties
  #Â - nested: they are ignored as types, only embedded as nested objetcts when required
  # - nestable: make sure to use this if you are also embedding this type somewhere else

  accession:
    _attributes: { i18n: true, timestamp: true }
    identifier: { type: string, index: not_analyzed }

  actor:
    _attributes: { i18n: true, timestamp: true }
    slug: { type: string, index: not_analyzed }
    entity_type_id: { type: integer, index: not_analyzed, include_in_all: false }

  contact_information:
    _attributes: { i18n: true, timestamp: true, nested: true }
    contact_person: { type: string, index: no }
    street_address: { type: string, index: no }
    postal_code: { type: string, include_in_all: false }
    country_code: { type: string, index: not_analyzed, include_in_all: false }
    location: { type: geo_point }

  information_object:
    _attributes: { i18n: true, timestamp: true }
    slug: { type: string, index: not_analyzed }
    reference_code: { type: string, index: not_analyzed }
    identifier: { type: string, index: not_analyzed }
    level_of_description_id: { type: integer, index: not_analyzed }
    publication_status_id: { type: integer, index: not_analyzed }
    parent_id: { type: integer, index: not_analyzed, include_in_all: false }
    ancestors: { type: integer, index: not_analyzed, include_in_all: false }
    children: { type: integer, index: not_analyzed, include_in_all: false }
    publication_status_id: { type: integer, index: not_analyzed }
    material_type_id: { type: integer, index: not_analyzed, include_in_all: false }
    copyright_status_id: { type: integer, index: not_analyzed, include_in_all: false }
    dates:
      type: object
      properties:
        start_date: { type: integer, index: not_analyzed }
        end_date: { type: integer, index: not_analyzed }
        type_id: { type: string, index: not_analyzed, include_in_all: false }
        actor: { type: string }
    has_digital_object: { type: boolean, index: not_analyzed, include_in_all: false }
    digital_object:
      type: object
      properties:
        media_type_id: { type: integer, index: not_analyzed, include_in_all: false }
        thumbnail_path: { type: string, index: not_analyzed }
    repository:
      _attributes: { foreignType: repository }
    subjects:
      _attributes: { foreignType: term }
    places:
      _attributes: { foreignType: term }
    names:
      _attributes: { foreignType: term }
    creators:
      _attributes: { foreignType: term }

  repository:
    _attributes: { i18n: true, timestamp: true, nestable: true }
    slug: { type: string, index: not_analyzed }
    identifier: { type: string, index: not_analyzed }
    media_type_id: { type: integer, index: not_analyzed, include_in_all: false }
    # TODO Upgrade arElasticSearchMapping so nestable objects include its own tested objects
    # contact:
    #   _attributes: { foreignType: contact_information }

  term:
    _attributes: { i18n: true, timestamp: true, nested: true }
    slug: { type: string, index: not_analyzed }
    taxonomy_id: { type: integer, index: not_analyzed, include_in_all: false }
